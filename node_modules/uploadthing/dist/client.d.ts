import type { FileRouter } from "./server";
export declare const DANGEROUS__uploadFiles: <T extends string>(files: File[], endpoint: T, config?: {
    url?: string;
}) => Promise<{
    fileUrl: string;
    fileKey: string;
}[]>;
export type UploadFileType<T extends string> = typeof DANGEROUS__uploadFiles<T>;
export declare const genUploader: <TRouter extends FileRouter>() => (files: File[], endpoint: keyof TRouter extends string ? keyof TRouter : string, config?: {
    url?: string;
}) => Promise<{
    fileUrl: string;
    fileKey: string;
}[]>;
export declare const classNames: (...classes: string[]) => string;
export declare const generateMimeTypes: (fileTypes: string[]) => string[] | undefined;
export declare const generateClientDropzoneAccept: (fileTypes: string[]) => {
    [k: string]: never[];
} | undefined;
//# sourceMappingURL=client.d.ts.map